# Setup default Rust toolchain
load("@io_bazel_rules_rust//rust:toolchain.bzl", "rust_toolchain")

rust_toolchain(
    name = "rust_1.49.0",
    binary_ext = "",
    cargo = "@rust_default//:bin/cargo",
    clippy_driver = "@rust_default//:bin/clippy-driver",
    dylib_ext = ".so",
    os = "linux",
    rust_doc = "@rust_default//:bin/rustdoc",
    rust_lib = "@rust_default//:rust_lib",
    rustc = "@rust_default//:bin/rustc",
    rustc_lib = "@rust_default//:rustc_lib",
    rustfmt = "@rust_default//:bin/rustfmt",
    staticlib_ext = "",
    stdlib_linkflags = [],
    target_triple = "x86_64-unknown-linux-gnu",
)

toolchain(
    name = "rust_toolchain",
    exec_compatible_with = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
    target_compatible_with = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
    toolchain = ":rust_1.49.0",
    toolchain_type = "@io_bazel_rules_rust//rust:toolchain",
)

# Rust Parser Library
load("@io_bazel_rules_rust//rust:rust.bzl", "rust_library")

rust_library(
    name = "mdspa",
    srcs = glob(["src/**/*.rs"]),
    crate_root = "src/Main.rs",
    rustc_env = {
        "CARGO_PKG_VERSION": "0.0.0",
    },
)

# Haskell Lexer Binary
load("@rules_haskell//haskell:defs.bzl", "haskell_binary")

haskell_binary(
    name = "mdspa-lexer",
    srcs = glob(["src/**/*.hs"]),
    deps = [
        "@stackage//:base",
        "@stackage//:mtl",
        "@stackage//:pretty-simple",
    ],
)
